/**
 * We want our units to be based on `em`, so that our SDK can accommodate for
 * the user changing their browser font size.
 * At the same time, `px` is a unit often used in templates etc. from Design.
 * To accommodate for both of these cases, we make our $unit be 1/16 of an `em`.
 * This results in each $unit into being the same as 1px (when the parent
 * font-size is 16px, as it is by default).
 *
 * So each "unit" isn't a pixel, but it is when the parent font size is 16px,
 * and it's proportionate to the difference otherwise.
 */
$unit: (1/16) * 1em;
$font-size-base: 16 * $unit;

/*
 * We also need different units for when trying to do `px` "equivalents" when
 * our parent has a different font size.
 */
$unit-x-large: (1/30) * 1em;
$font-size-x-large: 30 * $unit;
$unit-large: (1/20) * 1em;
$font-size-large: 20 * $unit;

$unit-small: (1/14) * 1em;
$font-size-small: 14 * $unit;

$unit-x-small: (1/11) * 1em;
$font-size-x-small: 11 * $unit;

/*
 * We also have a special unit for the react-phone-number-input library, so
 * we can keep its units in line with whatever units we decide to pick
 */
$unit-rrui: 1em;

$font-family: 'Open Sans', sans-serif;

$large-text-margin: 32 * $unit;
$small-text-margin: 24 * $unit;
$smaller-text-margin: 16 * $unit;
$padding-lg: 16 * $unit;
$padding-sm: 10 * $unit;
$padding-xs: 8 * $unit;

$sdk-container-max-width: 512 * $unit;
$footer-height: 40 * $unit;
$footer-margin: 0 * $unit;
$navigation-height: 32 * $unit;
$navigation-height-sm-screen: 38 * $unit;
$navigation-padding-top: $padding-lg;
$navigation-padding-sides: $padding-lg;
$navigation-padding-top-sm-screen: $padding-sm;
$navigation-padding-sides-sm-screen: $padding-xs;

/* Solid colors */
$color-white: #fff;
$color-primary-500: #353ff4;
$color-icon-temporary: #edeeef;
$color-neutral-050: #fcfcfd;
$color-neutral-600: #a2a8b3;
$color-neutral-700: #636670;
$color-neutral-800: #2b2d33;

$color-background: $color-neutral-050;
$color-border: $color-neutral-600;
$color-divider: #dee1e4;
$color-adjust-huener: $color-neutral-600;
$color-body-text: $color-neutral-800;
$color-title-text: $color-body-text;
$color-subtitle-text: $color-body-text;
$color-camera-error-overlay: #1c1f21;
$color-black: #000;
$color-small-print: #0f2536;
$color-tips-pill: #5d6b78;
$color-input-border: #667080;
$color-error: #dc2a2a;
$color-warning: $color-primary-500;

/* Warning message button text color */
$color-warning-button-text-hover: $color-white;

/* Error message button colors */
$color-error-button-hover: #ffb9b9;
$color-error-button-active: #fce5e5;

/* Transparent colors */
$color-transparent: transparent;
$color-help-container: $color-neutral-600;
$color-modal-overlay: rgba(0, 0, 0, 0.6);
$color-camera-overlay: rgba(0, 0, 0, 0.7);
$color-navbar-gradient-one: rgba(28, 31, 33, 0);
$color-navbar-gradient-two: rgba(28, 31, 33, 0.35);

/* Button colors */
$color-primary-button: $color-primary-500;
$color-primary-button-hover: #5c6cff;
$color-primary-button-active: #232aad;
$color-primary-button-disabled: #e8ecf0;

$color-secondary-button: $color-transparent;
$color-secondary-button-hover: rgba(92, 108, 255, 0.15);
$color-secondary-button-active: rgba(35, 42, 173, 0.3);
$color-secondary-button-text: $color-primary-500;
$color-button-border: $color-primary-500;

$color-small-button: rgba(15, 37, 54, 0.85);
$color-small-button-hover: rgba(15, 37, 54, 0.6);
$color-small-button-active: rgba(15, 37, 54, 0.85);

$color-icon-button: $color-transparent;
$color-icon-button-hover: #d5dae0;
$color-icon-button-active: #a2a8b3;

/* Selectors button styles */
$selectors-text-color: $color-body-text;
$selectors-border: 1px solid #8b9094;
$selectors-box-shadow-hover: 0 0 0 2px #5c6cff;
$selectors-box-shadow-active: 0 0 0 2px #232aad;

/* Camera button colors */
$color-camera-button: $color-white;
$color-camera-button-hover: $color-primary-button-hover;
$color-camera-button-active: $color-primary-button-active;

/* Modal */
$modal-animation-duration: 200ms;
// Export is required for ^ variable to be accessible at React/JS side
:export {
  modal_animation_duration: $modal-animation-duration;
}

%absolute-center {
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

%overflow-drop-shadow {
  @media (--shorter-viewport) {
    background-color: $color-background;
    bottom: 0;
    box-shadow: 0 -5px 10px -5px #7b7b7b;
    left: -1em;
    position: absolute;
    right: -1em;
    top: -8 * $unit;
    z-index: 0;
    /* By default the sibling button will be hidden by this shadow span */
    + button {
      z-index: 1;
    }
  }
}

@mixin width-parent-relative($base-width, $parent-width) {
  width: 100% * ($base-width/$parent-width);
}

%global-margin {
  margin: 0 $large-text-margin;
  @media (--small-viewport) {
    margin: 0 $small-text-margin;
  }
  @media (--smaller-viewport) {
    margin: 0 $smaller-text-margin;
  }
}

%global-padding {
  padding: 0 $large-text-margin;
  @media (--small-viewport) {
    padding: 0 $small-text-margin;
  }
  @media (--smaller-viewport) {
    padding: 0 $smaller-text-margin;
  }
}
