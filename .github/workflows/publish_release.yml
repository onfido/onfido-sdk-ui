name: Publish release

on:
  push:
    tags:
      - '*'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'eu-west-1'
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Build dist
        run: |
          npm install
          npm run build

      - name: Get version
        id: get_version
        run: echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Determine release type
        run: |
          GIT_TAG_REGEX="^[0-9]\{1,3\}\.[0-9]\{1,2\}\.[0-9]\{1,2\}$"
          LATEST_TAG=`git tag | grep $GIT_TAG_REGEX | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n | sed '1!G;h;$!d' | sed -n 1p`
          echo ::set-env name=LATEST_TAG::${LATEST_TAG}

      - name: Get base32 version
        id: get_base32_version
        run: |
          source ./release/githubActions/workflows.config
          echo ::set-env name=BASE_32_VERSION::${BASE_32_VERSION}

      - name: Upload Base32 to S3
        run: |
          aws s3 cp ./dist s3://${{ secrets.AWS_S3_BUCKET }}/web-sdk-base32-releases/$BASE_32_VERSION/ --exclude "*.html" --recursive --acl public-read

      - name: Upload Release to S3
        run: |
          aws s3 cp ./dist s3://${{ secrets.AWS_S3_BUCKET }}/web-sdk-releases/$VERSION/ --exclude "*.html" --recursive --acl public-read

      - name: Publish to NPM
        run: |
          if [ "$VERSION" == "$LATEST_TAG" ]
          then
            echo Publishing latest tag $VERSION
            npm publish
          else
            echo Publishing next tag $VERSION
            npm publish --tag next
          fi

        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
