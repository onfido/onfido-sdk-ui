name: CI

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run dependencies audit
        uses: oke-py/npm-audit-action@v1.7.2
        with:
          audit_level: moderate
          production_flag: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_assignees: stefaniacardenas
          issue_labels: vulnerability
          dedupe_issues: true

      - name: Run linters
        run: npm run check

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration
        env:
          SDK_TOKEN_FACTORY_SECRET: ${{ secrets.SDK_TOKEN_FACTORY_SECRET }}

      # TODO: we're building the whole sdk again with NODE_ENV=test, just because some properties e.g. MOBILE_URL are different.
      # We could skip this if this option can be passed as option while bootstrapping

      - name: Build test
        run: NODE_ENV=test npm run build

      - name: Run BundleWatch Check
        uses: jackyef/bundlewatch-gh-action@0.1.0
        with:
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}

      - uses: actions/upload-artifact@master
        with:
          name: build-${{ github.run_id }}
          path: dist

  surge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build artifact
        run: NODE_ENV=test TEST_ENV=deployment npm run build

      - name: Publish to Surge
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: "https://${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh"
          project: './dist'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}

      - name: Build artifact
        run: NODE_ENV=staging npm run build

      - name: Publish to Surge
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: "https://staging-${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh"
          project: './dist'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}

      - name: Add comment with Surge link to PR
        uses: mshick/add-pr-comment@v1
        with:
          message: "https://${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh ðŸš€\nhttps://staging-${{ github.event.pull_request.number }}-pr-onfido-sdk-ui-onfido.surge.sh ðŸš€"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
  test-ui-chrome:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Install Percy
        run: npm install -g @percy/cli

      - uses: actions/checkout@v2
        with:
          repository: it-ony/webtest
          path: webtest

      - name: Build webtest
        run: cd webtest && mvn --no-transfer-progress clean install && cd ..

      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@v1

      - uses: actions/download-artifact@v2
        with:
          name: build-${{ github.run_id }}
          path: dist

      - name: build test server
        id: testserver
        run: rm -rf ./test/mock-server/frontend && cp -r dist test/mock-server/frontend && docker-compose up --build --no-start

      - name: Run UI tests in Chrome
        working-directory: ./test/webtest
        id: chrome
        if: ${{ steps.testserver.outcome == 'success' }}
        run: ./run-ui-tests.sh "-Dbrowser=chrome -Dit.test=!MultipleBrowsersDocumentUploadIT,!ReleaseIT -DthreadCount=10 -Denvironment=headless"
        shell: bash
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD: ${{ github.ref }}-${{ github.run_id }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_JAVA }}

      - name: Upload screenshot reports
        uses: actions/upload-artifact@v2
        if: ${{ steps.chrome.outcome == 'failure' }}
        with:
          name: chrome-testrun-report
          path: test/webtest/target/screenShot
          retention-days: 5

      - name: Publish Selenium Test Results - Chrome
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test/webtest/target/surefire-reports/junitreports/*.xml
          check_name: "UI Test results - Chrome"

      - name: Verify test results
        if: ${{ steps.testserver.outcome == 'success' }}
        shell: bash
        run: |
          set -x

          CHROME=${{ steps.chrome.outputs.exit_code }}

          if [[ "$CHROME" != "0" ]]
          then
            exit 1
          fi

  test-ui-browserstack:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - uses: actions/checkout@v2
        with:
          repository: it-ony/webtest
          path: webtest

      - name: Build webtest
        run: cd webtest && mvn --no-transfer-progress clean install && cd ..

      - uses: actions/download-artifact@v2
        with:
          name: build-${{ github.run_id }}
          path: dist

      - name: build test server
        id: testserver
        run: rm -rf ./test/mock-server/frontend && cp -r dist test/mock-server/frontend && docker-compose up --build --no-start

      - name: Run UI tests in Firefox
        id: firefox
        if: ${{ steps.testserver.outcome == 'success' }}
        working-directory: ./test/webtest
        continue-on-error: true
        run: ./run-ui-tests.sh "-Dit.test=MultipleBrowsersDocumentUploadIT -DthreadCount=1 -Denvironment=browserstack -Dbrowser=firefox -DscreenshotListener.enabled=false"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BUILD: ${{ github.ref }}-${{ github.run_id }}

      - name: Publish Selenium Test Results - Firefox
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ steps.firefox.outcome == 'success' || steps.firefox.outcome == 'failure' }}
        with:
          files: test/webtest/target/surefire-reports/junitreports/*.xml
          check_name: "UI Test results - Firefox"

      - name: Run UI tests in Edge
        working-directory: ./test/webtest
        continue-on-error: true
        id: edge
        if: ${{ steps.testserver.outcome == 'success' }}
        run: ./run-ui-tests.sh "-Dit.test=MultipleBrowsersDocumentUploadIT -DthreadCount=1 -Denvironment=browserstack -Dbrowser=edge -DscreenshotListener.enabled=false"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BUILD: ${{ github.ref }}-${{ github.run_id }}

      - name: Publish Selenium Test Results - Edge
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ steps.edge.outcome == 'success' || steps.edge.outcome == 'failure' }}
        with:
          files: test/webtest/target/surefire-reports/junitreports/*.xml
          check_name: "UI Test results - Edge"

      - name: Run UI tests in Safari
        working-directory: ./test/webtest
        continue-on-error: true
        id: safari
        if: ${{ steps.testserver.outcome == 'success' }}
        run: ./run-ui-tests.sh "-Dit.test=MultipleBrowsersDocumentUploadIT -DthreadCount=1 -Denvironment=browserstack -Dbrowser=safari -DbrowserVersion=15.1 -DscreenshotListener.enabled=false"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BUILD: ${{ github.ref }}-${{ github.run_id }}

      - name: Publish Selenium Test Results - Safari
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ steps.safari.outcome == 'success' || steps.safari.outcome == 'failure' }}
        with:
          files: test/webtest/target/surefire-reports/junitreports/*.xml
          check_name: "UI Test results - Safari"

      - name: Run UI tests in IE
        working-directory: ./test/webtest
        continue-on-error: true
        id: ie
        if: ${{ steps.testserver.outcome == 'success' }}
        run: ./run-ui-tests.sh "-Dit.test=MultipleBrowsersDocumentUploadIT -DthreadCount=1 -DnetworkLogs=false -DbaseUrl=http://localhost:8081/local/ -Denvironment=browserstack -Dbrowser=ie -DbrowserVersion=11 -DscreenshotListener.enabled=false"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BUILD: ${{ github.ref }}-${{ github.run_id }}

      - name: Publish Selenium Test Results - IE
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ steps.ie.outcome == 'success' || steps.ie.outcome == 'failure' }}
        with:
          files: test/webtest/target/surefire-reports/junitreports/*.xml
          check_name: "UI Test results - IE"
          fail_on: "nothing"

      - name: Verify test results
        if: ${{ steps.testserver.outcome == 'success' }}
        shell: bash
        run: |
          set -x

          FIREFOX=${{ steps.firefox.outputs.exit_code }}
          EDGE=${{ steps.edge.outputs.exit_code }}
          SAFARI=${{ steps.safari.outputs.exit_code }}
          IE=${{ steps.ie.outputs.exit_code }}

          if [[ "$FIREFOX" != "0" || "$EDGE" != "0" || "$SAFARI" != "0" ]]
          then
            exit 1
          fi

